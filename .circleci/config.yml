version: 2.1

jobs:
  cypressImageDiff:
    docker:
      - image: cypress/base:latest
    working_directory: ~/test-github-app
    steps:
      - checkout
      - run:
          name: Print CircleCI Standard Variables
          command: |
            echo "CI: $CI"
            echo "CIRCLECI: $CIRCLECI"
            echo "CIRCLE_BRANCH: $CIRCLE_BRANCH"
            echo "CIRCLE_BUILD_NUM: $CIRCLE_BUILD_NUM"
            echo "CIRCLE_BUILD_URL: $CIRCLE_BUILD_URL"
            echo "CIRCLE_JOB: $CIRCLE_JOB"
            echo "CIRCLE_NODE_INDEX: $CIRCLE_NODE_INDEX"
            echo "CIRCLE_NODE_TOTAL: $CIRCLE_NODE_TOTAL"
            echo "CIRCLE_PR_NUMBER: $CIRCLE_PR_NUMBER"
            echo "CIRCLE_PR_REPONAME: $CIRCLE_PR_REPONAME"
            echo "CIRCLE_PR_USERNAME: $CIRCLE_PR_USERNAME"
            echo "CIRCLE_PREVIOUS_BUILD_NUM: $CIRCLE_PREVIOUS_BUILD_NUM"
            echo "CIRCLE_PROJECT_REPONAME: $CIRCLE_PROJECT_REPONAME"
            echo "CIRCLE_PROJECT_USERNAME: $CIRCLE_PROJECT_USERNAME"
            echo "CIRCLE_PULL_REQUEST: $CIRCLE_PULL_REQUEST"
            echo "CIRCLE_PULL_REQUESTS: $CIRCLE_PULL_REQUESTS"
            echo "CIRCLE_REPOSITORY_URL: $CIRCLE_REPOSITORY_URL"
            echo "CIRCLE_SHA1: $CIRCLE_SHA1"
            echo "CIRCLE_TAG: $CIRCLE_TAG"
            echo "CIRCLE_USERNAME: $CIRCLE_USERNAME"
            echo "CIRCLE_WORKFLOW_ID: $CIRCLE_WORKFLOW_ID"
            echo "CIRCLE_WORKFLOW_WORKSPACE_ID: $CIRCLE_WORKFLOW_WORKSPACE_ID"
            echo "CIRCLE_WORKING_DIRECTORY: $CIRCLE_WORKING_DIRECTORY"

      - run:
          name: Print Pipeline Variables
          command: |
            echo "pipeline.id: ${{ pipeline.id }}"
            echo "pipeline.number: ${{ pipeline.number }}"
            echo "pipeline.project.git_url: ${{ pipeline.project.git_url }}"
            echo "pipeline.project.type: ${{ pipeline.project.type }}"
            echo "pipeline.git.tag: ${{ pipeline.git.tag }}"
            echo "pipeline.git.branch: ${{ pipeline.git.branch }}"
            echo "pipeline.git.revision: ${{ pipeline.git.revision }}"
            echo "pipeline.git.base_revision: ${{ pipeline.git.base_revision }}"
            echo "pipeline.in_setup: ${{ pipeline.in_setup }}"
            echo "pipeline.trigger_source: ${{ pipeline.trigger_source }}"
            echo "pipeline.schedule.name: ${{ pipeline.schedule.name }}"
            echo "pipeline.schedule.id: ${{ pipeline.schedule.id }}"
      - run:
          name: Install Dependencies and Required Libraries
          command: |
            npm install
            apt-get update && apt-get install -y \
              libgtk2.0-0 \
              libgtk-3-0 \
              libgbm-dev \
              libnotify-dev \
              libnss3 \
              libxss1 \
              libasound2 \
              libxtst6 \
              xauth \
              xvfb \
              curl
      - run:
          name: Run Tests
          command: npm run test
      - store_artifacts:
          path: cypress-image-diff-screenshots
      - store_artifacts:
          path: cypress-image-diff-html-report

      - run:
          name: Set Success Status
          when: on_success
          command: |
            echo "======"
            echo $CIRCLE_WORKFLOW_JOB_ID
            OWNER=$(echo $CIRCLE_REPOSITORY_URL | cut -d'/' -f4)
            REPO=$(echo $CIRCLE_REPOSITORY_URL | cut -d'/' -f5)
            
            TOKEN=$GITHUB_STATUS_TOKEN
            echo $CIRCLE_SHA1
            SHA=$CIRCLE_SHA1
            
            curl -L \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer $TOKEN" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "https://api.github.com/repos/$OWNER/$REPO/statuses/$SHA" \
              -d '{"state":"success","target_url":"https://example.com/build/status","description":"The build succeeded!","context":"continuous-integration/jenkins"}'

workflows:
  version: 2
  test-circle:
    jobs:
      - cypressImageDiff
